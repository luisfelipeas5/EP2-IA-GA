CHECKLIST:
	RELATORIO:
		-Observar:
			-Melhor Fitness:	
				-Mudando crossover
				-Mudando mutacao
				-Mudando Tamanho populacao
				-Mudando Tamanho Subpopulacao
				-Mudando Numero de Individuos Mutantes
				-Mudando Numero de Geracoes
				-Pais sobrevivendo ou nao
				-Mudando numero de candidatos a crossover
			-Media Fitness:	
				-Mudando crossover
				-Mudando mutacao
				-Mudando Tamanho populacao
				-Mudando Tamanho Subpopulacao
				-Mudando Numero de Individuos Mutantes
				-Mudando Numero de Geracoes
				-Pais sobrevivendo ou nao
				-Mudando numero de candidatos a crossover
			-Diversidade:	
				-Mudando crossover
				-Mudando mutacao
				-Mudando Tamanho populacao
				-Mudando Tamanho Subpopulacao
				-Mudando Numero de Individuos Mutantes
				-Mudando Numero de Geracoes
				-Pais sobrevivendo ou nao
				-Mudando numero de candidatos a crossover
			-Tempo:
				-Sem Threads
				-Mudando Numero de Threads
	FORA DOS REQUISITOS:
		- Otimizacao
			-Sugestão para proximo passo para otimizar: criar classe CrossoverMutacaoThread
				isso evita que sejam criadas mais threads durante a execucao e dividir novamente a populacao
	REQUISITOS MÍNIMOS:
		OK - Codificação com números inteiros
		OK - Função de fitness
		OK - Crossover OX 
		OK - Mutação Inversa
		PARÂMETROS:
			OK - Taxa de crossover
			OK - Taxa de mutação
			OK - Operador de seleção
		MOSTRAR NA TELA:
			OK - Progressão da evolução
			- Gravar em arquivo texto os melhores indivíduos
			- Graficos
	REQUISITOS DESEJAVEIS:
		- Implementar outros tipos de Selecao
		- Implementar outros tipos de Crossover
		- Implementar outros tipos de Mutacao